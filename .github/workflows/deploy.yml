name: Deploy
run-name: Deploy

on: 
  push:
    branches:
      - 'main'
        
jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.filter.outputs.workflows }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          reqs:
            - 'requirements.txt'
      
  deploy:
    runs-on: ubuntu-latest
    needs: paths-filter
    steps:
    - uses: actions/checkout@v3  
    
    - name: Restarting the bot with reqs
      if: steps.filter.outputs.reqs == 'true'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ./AluBot
          source venv/bin/activate
          pip install -r ./requirements.txt
          git pull
          sudo systemctl restart alubot.service
          
    - name: Restarting the bot without reqs
      if: steps.filter.outputs.reqs != 'true'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ./AluBot
          git pull
          sudo systemctl restart alubot.service

          
    
  
